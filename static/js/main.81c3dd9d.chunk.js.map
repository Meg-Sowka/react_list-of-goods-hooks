{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","handleSort","sortting","sortedGoods","goods","visibleGoods","ALPHABET","sort","prev","next","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAkCE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAa,SAACC,GAClBF,EAAYE,GACRA,IAAaV,EAASM,MACxBD,GAAc,IAIZM,EAlCD,SACLC,EADK,GAGJ,IADCL,EACF,EADEA,SAAUH,EACZ,EADYA,WAENS,EAAY,YAAOD,GAEzB,OAAQL,GACN,KAAKP,EAASc,SACZD,EAAaE,MAAK,SAACC,EAAMC,GAAP,OAAgBD,EAAKE,cAAcD,MACrD,MACF,KAAKjB,EAASmB,OACZN,EAAaE,MAAK,SAACC,EAAMC,GAAP,OAAgBD,EAAKI,OAASH,EAAKG,UASzD,OAJIhB,GACFS,EAAaQ,UAGRR,EAcaS,CAClBrB,EACA,CAAEM,WAAUH,eAGd,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYlB,IAAaP,EAASc,WAEpCY,QAAS,kBAAMjB,EAAWT,EAASc,WALrC,iCAUA,wBACEU,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYlB,IAAaP,EAASmB,SAEpCO,QAAS,kBAAMjB,EAAWT,EAASmB,SALrC,4BAUA,wBACEK,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAarB,IAEfsB,QAAS,kBAAMrB,GAAeD,IALhC,sBAUEA,GAAcG,IAAaP,EAASM,OACpC,wBACEkB,KAAK,SACLD,UAAU,4BACVG,QAAS,kBAAMjB,EAAWT,EAASM,OAHrC,sBAUJ,6BACGK,EAAYgB,KAAI,SAAAC,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC9GzDC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.81c3dd9d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((prev, next) => prev.localeCompare(next));\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((prev, next) => prev.length - next.length);\n      break;\n    default:\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const handleSort = (sortting: SortType) => {\n    setSortType(sortting);\n    if (sortting === SortType.NONE) {\n      setIsReversed(false);\n    }\n  };\n\n  const sortedGoods = getReorderedGoods(\n    goodsFromServer,\n    { sortType, isReversed },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortType !== SortType.ALPHABET,\n          })}\n          onClick={() => handleSort(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortType !== SortType.LENGTH,\n          })}\n          onClick={() => handleSort(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(isReversed || sortType !== SortType.NONE) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => handleSort(SortType.NONE)}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {sortedGoods.map(good => <li data-cy=\"Good\" key={good}>{good}</li>)}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}